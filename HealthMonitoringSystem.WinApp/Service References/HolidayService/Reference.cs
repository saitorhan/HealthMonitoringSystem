//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HealthMonitoringSystem.WinApp.HolidayService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Holiday", Namespace="http://schemas.datacontract.org/2004/07/HealthMonitoringSystem.Entity", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Holiday : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Day {
            get {
                return this.DayField;
            }
            set {
                if ((this.DayField.Equals(value) != true)) {
                    this.DayField = value;
                    this.RaisePropertyChanged("Day");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Month {
            get {
                return this.MonthField;
            }
            set {
                if ((this.MonthField.Equals(value) != true)) {
                    this.MonthField = value;
                    this.RaisePropertyChanged("Month");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessResult", Namespace="http://schemas.datacontract.org/2004/07/HealthMonitoringSystem.Interfaces")]
    [System.SerializableAttribute()]
    public partial class ProcessResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HealthMonitoringSystem.WinApp.HolidayService.ExtensionsBLLResult ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HealthMonitoringSystem.WinApp.HolidayService.ExtensionsBLLResult Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Extensions.BLLResult", Namespace="http://schemas.datacontract.org/2004/07/HealthMonitoringSystem.Interfaces")]
    public enum ExtensionsBLLResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotVerified = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InnerException = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Verified = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlreadyFound = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Referanced = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotFound = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServerDisable = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HolidayService.IHolidaySol")]
    public interface IHolidaySol {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHolidaySol/Select", ReplyAction="http://tempuri.org/IHolidaySol/SelectResponse")]
        HealthMonitoringSystem.WinApp.HolidayService.Holiday Select(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHolidaySol/Holidays", ReplyAction="http://tempuri.org/IHolidaySol/HolidaysResponse")]
        HealthMonitoringSystem.WinApp.HolidayService.Holiday[] Holidays();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHolidaySol/Insert", ReplyAction="http://tempuri.org/IHolidaySol/InsertResponse")]
        HealthMonitoringSystem.WinApp.HolidayService.ProcessResult Insert(HealthMonitoringSystem.WinApp.HolidayService.Holiday newHoliday, int holidayLenght, bool everyYear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHolidaySol/Update", ReplyAction="http://tempuri.org/IHolidaySol/UpdateResponse")]
        HealthMonitoringSystem.WinApp.HolidayService.ProcessResult Update(HealthMonitoringSystem.WinApp.HolidayService.Holiday newInfoHoliday);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHolidaySol/Delete", ReplyAction="http://tempuri.org/IHolidaySol/DeleteResponse")]
        HealthMonitoringSystem.WinApp.HolidayService.ProcessResult Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHolidaySol/IsHolidayDay", ReplyAction="http://tempuri.org/IHolidaySol/IsHolidayDayResponse")]
        bool IsHolidayDay(HealthMonitoringSystem.WinApp.HolidayService.Holiday holiday);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHolidaySolChannel : HealthMonitoringSystem.WinApp.HolidayService.IHolidaySol, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HolidaySolClient : System.ServiceModel.ClientBase<HealthMonitoringSystem.WinApp.HolidayService.IHolidaySol>, HealthMonitoringSystem.WinApp.HolidayService.IHolidaySol {
        
        public HolidaySolClient() {
        }
        
        public HolidaySolClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HolidaySolClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HolidaySolClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HolidaySolClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HealthMonitoringSystem.WinApp.HolidayService.Holiday Select(int id) {
            return base.Channel.Select(id);
        }
        
        public HealthMonitoringSystem.WinApp.HolidayService.Holiday[] Holidays() {
            return base.Channel.Holidays();
        }
        
        public HealthMonitoringSystem.WinApp.HolidayService.ProcessResult Insert(HealthMonitoringSystem.WinApp.HolidayService.Holiday newHoliday, int holidayLenght, bool everyYear) {
            return base.Channel.Insert(newHoliday, holidayLenght, everyYear);
        }
        
        public HealthMonitoringSystem.WinApp.HolidayService.ProcessResult Update(HealthMonitoringSystem.WinApp.HolidayService.Holiday newInfoHoliday) {
            return base.Channel.Update(newInfoHoliday);
        }
        
        public HealthMonitoringSystem.WinApp.HolidayService.ProcessResult Delete(int id) {
            return base.Channel.Delete(id);
        }
        
        public bool IsHolidayDay(HealthMonitoringSystem.WinApp.HolidayService.Holiday holiday) {
            return base.Channel.IsHolidayDay(holiday);
        }
    }
}
